<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.snail.abell.permission.dao.SysJobDao">

    <resultMap id="BaseResultMap" type="com.snail.abell.permission.entity.SysJob">
        <!--@Table sys_job-->
        <result property="jobId" column="job_id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="enabled" column="enabled" jdbcType="OTHER"/>
        <result property="jobSort" column="job_sort" jdbcType="INTEGER"/>
        <result property="createBy" column="create_by" jdbcType="VARCHAR"/>
        <result property="updateBy" column="update_by" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BaseResultMap">
        select
          job_id, name, enabled, job_sort, create_by, update_by, create_time, update_time
        from galloping_snail.sys_job
        where job_id = #{jobId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseResultMap">
        select
          job_id, name, enabled, job_sort, create_by, update_by, create_time, update_time
        from galloping_snail.sys_job
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BaseResultMap">
        select
          job_id, name, enabled, job_sort, create_by, update_by, create_time, update_time
        from galloping_snail.sys_job
        <where>
            <if test="jobId != null">
                and job_id = #{jobId}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="enabled != null">
                and enabled = #{enabled}
            </if>
            <if test="jobSort != null">
                and job_sort = #{jobSort}
            </if>
            <if test="createBy != null and createBy != ''">
                and create_by = #{createBy}
            </if>
            <if test="updateBy != null and updateBy != ''">
                and update_by = #{updateBy}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="jobId" useGeneratedKeys="true">
        insert into galloping_snail.sys_job(name, enabled, job_sort, create_by, update_by, create_time, update_time)
        values (#{name}, #{enabled}, #{jobSort}, #{createBy}, #{updateBy}, #{createTime}, #{updateTime})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update galloping_snail.sys_job
        <set>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="enabled != null">
                enabled = #{enabled},
            </if>
            <if test="jobSort != null">
                job_sort = #{jobSort},
            </if>
            <if test="createBy != null and createBy != ''">
                create_by = #{createBy},
            </if>
            <if test="updateBy != null and updateBy != ''">
                update_by = #{updateBy},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        where job_id = #{jobId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from galloping_snail.sys_job where job_id = #{jobId}
    </delete>

</mapper>