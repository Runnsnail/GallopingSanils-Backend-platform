<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.snail.abell.dao.TPageElementDao">

    <resultMap id="BaseResultMap" type="com.snail.abell.entity.TPageElement">
        <!--@Table t_page_element-->
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="pageId" column="page_id" jdbcType="BIGINT"/>
        <result property="elementName" column="element_name" jdbcType="VARCHAR"/>
        <result property="byType" column="by_type" jdbcType="VARCHAR"/>
        <result property="byValue" column="by_value" jdbcType="VARCHAR"/>
        <result property="isEnable" column="is_enable" jdbcType="INTEGER"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
        <result property="createBy" column="create_by" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BaseResultMap">
        select
          id, page_id, element_name, by_type, by_value, is_enable, remark, create_by, create_time, update_by, update_time
        from galloping_snail.t_page_element
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseResultMap">
        select
          id, page_id, element_name, by_type, by_value, is_enable, remark, create_by, create_time, update_by, update_time
        from galloping_snail.t_page_element
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BaseResultMap">
        select
          id, page_id, element_name, by_type, by_value, is_enable, remark, create_by, create_time, update_by, update_time
        from galloping_snail.t_page_element
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="pageId != null">
                and page_id = #{pageId}
            </if>
            <if test="elementName != null and elementName != ''">
                and element_name = #{elementName}
            </if>
            <if test="byType != null and byType != ''">
                and by_type = #{byType}
            </if>
            <if test="byValue != null and byValue != ''">
                and by_value = #{byValue}
            </if>
            <if test="isEnable != null">
                and is_enable = #{isEnable}
            </if>
            <if test="remark != null and remark != ''">
                and remark = #{remark}
            </if>
            <if test="createBy != null and createBy != ''">
                and create_by = #{createBy}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateBy != null and updateBy != ''">
                and update_by = #{updateBy}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
        </where>
    </select>
    <select id="findByPageId" resultType="com.snail.abell.entity.TPageElement" parameterType="com.snail.abell.projectPage.entity.TProjectPage.projectId">
        SELECT pe.* FROM galloping_snail.t_project_page tp , galloping_snail.t_page_element pe WHERE  tp.id = pe.page_id AND tp.project_id = #{projectId}
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into galloping_snail.t_page_element(page_id, element_name, by_type, by_value, is_enable, remark, create_by, create_time, update_by, update_time)
        values (#{pageId}, #{elementName}, #{byType}, #{byValue}, #{isEnable}, #{remark}, #{createBy}, #{createTime}, #{updateBy}, #{updateTime})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update galloping_snail.t_page_element
        <set>
            <if test="pageId != null">
                page_id = #{pageId},
            </if>
            <if test="elementName != null and elementName != ''">
                element_name = #{elementName},
            </if>
            <if test="byType != null and byType != ''">
                by_type = #{byType},
            </if>
            <if test="byValue != null and byValue != ''">
                by_value = #{byValue},
            </if>
            <if test="isEnable != null">
                is_enable = #{isEnable},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark},
            </if>
            <if test="createBy != null and createBy != ''">
                create_by = #{createBy},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateBy != null and updateBy != ''">
                update_by = #{updateBy},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from galloping_snail.t_page_element where id = #{id}
    </delete>

    <insert id="insertList" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO t_page_element(
        page_id,
        element_name,
        by_type,
        by_value,
        is_enable,
        remark
        )VALUES
        <foreach collection="list" item="element" index="index" separator=",">
            (
            #{element.pageId,jdbcType=BIGINT},
            #{element.elementName,jdbcType=VARCHAR},
            #{element.byType,jdbcType=VARCHAR},
            #{element.byValue,jdbcType=VARCHAR},
            #{element.isEnable,jdbcType=INTEGER},
            #{element.remark,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>

    <delete id="deleteBatchPageIds" parameterType="java.util.List">
        delete from galloping_snail.t_page_element where page_id in
        <foreach collection="list" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>
</mapper>
